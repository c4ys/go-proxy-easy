name: Release

on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write

jobs:
  release:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
    
    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: '1.24'
        check-latest: true
    
    - name: Verify Go installation
      run: go version
    
    - name: Run tests
      run: go test -v ./...
    
    - name: Build binaries
      run: |
        mkdir -p dist
        
        # Get version info
        VERSION=${GITHUB_REF#refs/tags/}
        BUILD_TIME=$(date -u +"%Y-%m-%dT%H:%M:%SZ")
        GIT_COMMIT=${GITHUB_SHA::7}
        
        echo "Building version: $VERSION"
        echo "Build time: $BUILD_TIME"
        echo "Git commit: $GIT_COMMIT"
        
        # Build for different platforms
        platforms=("linux/amd64" "linux/arm64" "windows/amd64" "darwin/amd64" "darwin/arm64")
        
        for platform in "${platforms[@]}"; do
          IFS='/' read -r os arch <<< "$platform"
          output_name="go-proxy-easy"
          
          if [ "$os" = "windows" ]; then
            output_name="${output_name}.exe"
          fi
          
          output_path="dist/${output_name//go-proxy-easy/go-proxy-easy-$os-$arch}"
          if [ "$os" = "windows" ]; then
            output_path="dist/go-proxy-easy-${os}-${arch}.exe"
          else
            output_path="dist/go-proxy-easy-${os}-${arch}"
          fi
          
          echo "Building $os/$arch -> $output_path"
          GOOS=$os GOARCH=$arch go build -o "$output_path" main.go
        done
        
        echo "Build complete:"
        ls -la dist/
    
    - name: Create Release
      uses: softprops/action-gh-release@v2
      with:
        files: dist/*
        body: |
          ## go-proxy-easy ${{ github.ref_name }}
          
          一个极简的 Go HTTP 代理服务器，一行命令即可启动！
          
          ### 🚀 快速开始
          
          下载适合您系统的版本，然后运行：
          
          ```bash
          # 无需认证
          ./go-proxy-easy
          
          # 启用认证
          ./go-proxy-easy -listen 0.0.0.0:8080 -user admin -pass 123456
          ```
          
          ### 📦 下载
          
          - **Linux**: `go-proxy-easy-linux-amd64` (x86_64) 或 `go-proxy-easy-linux-arm64` (ARM64)
          - **Windows**: `go-proxy-easy-windows-amd64.exe` (x86_64)
          - **macOS**: `go-proxy-easy-darwin-amd64` (Intel) 或 `go-proxy-easy-darwin-arm64` (Apple Silicon)
          
          ### ✨ 特性
          
          - ✨ 使用 Go 1.24 构建，性能优化
          - 🔐 支持 Basic 认证
          - 🌐 HTTP/HTTPS 代理支持
          - 🪶 轻量级，无外部依赖
          - ⚙️ 灵活的命令行配置
        draft: false
        prerelease: false
        generate_release_notes: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
